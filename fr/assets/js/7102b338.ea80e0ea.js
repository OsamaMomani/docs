"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[83879],{3905:(e,o,t)=>{t.d(o,{Zo:()=>u,kt:()=>f});var r=t(67294);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function p(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?p(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function a(e,o){if(null==e)return{};var t,r,n=function(e,o){if(null==e)return{};var t,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),l=function(e){var o=r.useContext(i),t=o;return e&&(t="function"==typeof e?e(o):s(s({},o),e)),t},u=function(e){var o=l(e.components);return r.createElement(i.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},c=r.forwardRef((function(e,o){var t=e.components,n=e.mdxType,p=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=l(t),f=n,m=c["".concat(i,".").concat(f)]||c[f]||d[f]||p;return t?r.createElement(m,s(s({ref:o},u),{},{components:t})):r.createElement(m,s({ref:o},u))}));function f(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var p=t.length,s=new Array(p);s[0]=c;var a={};for(var i in o)hasOwnProperty.call(o,i)&&(a[i]=o[i]);a.originalType=e,a.mdxType="string"==typeof e?e:n,s[1]=a;for(var l=2;l<p;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},69194:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>p,metadata:()=>a,toc:()=>l});var r=t(87462),n=(t(67294),t(3905));const p={},s=void 0,a={unversionedId:"okp4d_query_gov_proposals",id:"okp4d_query_gov_proposals",title:"okp4d_query_gov_proposals",description:"okp4d query gov proposals",source:"@site/commands/okp4d_query_gov_proposals.md",sourceDirName:".",slug:"/okp4d_query_gov_proposals",permalink:"/fr/commands/next/okp4d_query_gov_proposals",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_gov_proposal",permalink:"/fr/commands/next/okp4d_query_gov_proposal"},next:{title:"okp4d_query_gov_proposer",permalink:"/fr/commands/next/okp4d_query_gov_proposer"}},i={},l=[{value:"okp4d query gov proposals",id:"okp4d-query-gov-proposals",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:l};function d(e){let{components:o,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,t,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"okp4d-query-gov-proposals"},"okp4d query gov proposals"),(0,n.kt)("p",null,"Query proposals with optional filters"),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Query for a all paginated proposals that match optional filters:"),(0,n.kt)("p",null,"Example:\n$ okp4d query gov proposals --depositor cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ okp4d query gov proposals --voter cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ okp4d query gov proposals --status (DepositPeriod|VotingPeriod|Passed|Rejected)\n$ okp4d query gov proposals --page=2 --limit=100"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"okp4d query gov proposals [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --count-total        count total number of records in proposals to query for\n      --depositor string   (optional) filter by proposals deposited on by depositor\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposals\n      --limit uint         pagination limit of proposals to query for (default 100)\n      --node string        &lt;host&gt;:&lt;port&gt; to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of proposals to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of proposals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of proposals to query for\n      --reverse            results are sorted in descending order\n      --status string      (optional) filter proposals by proposal status, status: deposit_period/voting_period/passed/rejected\n      --voter string       (optional) filter by proposals voted on by voted\n')),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --chain-id string   The network chain ID (default "okp4d")\n')),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/commands/next/okp4d_query_gov"},"okp4d query gov"),"\t - Querying commands for the governance module")))}d.isMDXComponent=!0}}]);