"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[96554],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=r,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?o.createElement(m,i(i({ref:t},d),{},{components:n})):o.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},16649:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"okp4d_tx_interchain-accounts_controller_send-tx",id:"version-v5.0.0/okp4d_tx_interchain-accounts_controller_send-tx",title:"okp4d_tx_interchain-accounts_controller_send-tx",description:"okp4d tx interchain-accounts controller send-tx",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_tx_interchain-accounts_controller_send-tx.md",sourceDirName:".",slug:"/okp4d_tx_interchain-accounts_controller_send-tx",permalink:"/fr/commands/okp4d_tx_interchain-accounts_controller_send-tx",draft:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_tx_interchain-accounts_controller_register",permalink:"/fr/commands/okp4d_tx_interchain-accounts_controller_register"},next:{title:"okp4d_tx_interchain-accounts_host",permalink:"/fr/commands/okp4d_tx_interchain-accounts_host"}},c={},l=[{value:"okp4d tx interchain-accounts controller send-tx",id:"okp4d-tx-interchain-accounts-controller-send-tx",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"okp4d-tx-interchain-accounts-controller-send-tx"},"okp4d tx interchain-accounts controller send-tx"),(0,r.kt)("p",null,"Send an interchain account tx on the provided connection."),(0,r.kt)("h3",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Submits pre-built packet data containing messages to be executed on the host chain\nand attempts to send the packet. Packet data is provided as json, file or string. An\nappropriate relative timeoutTimestamp must be provided with flag {relative-packet-timeout}"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"okp4d tx interchain-accounts controller send-tx [connection-id] [path/to/packet_msg.json] [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -a, --account-number uint            The account number of the signing account (offline mode only)\n      --aux                            Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string          Transaction broadcasting mode (sync|async) (default "sync")\n      --chain-id string                The network chain ID (default "okp4d")\n      --dry-run                        ignore the --gas flag and perform a simulation of a transaction, but don\'t broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string             Fee granter grants fees for the transaction\n      --fee-payer string               Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                    Fees to pay along with transaction; eg: 10uatom\n      --from string                    Name or address of private key with which to sign\n      --gas string                     gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn\'t always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)\n      --gas-adjustment float           adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string              Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                  Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                           help for send-tx\n      --keyring-backend string         Select keyring\'s backend (os|file|kwallet|pass|test|memory) (default "test")\n      --keyring-dir string             The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --ledger                         Use a connected Ledger device\n      --node string                    &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default "tcp://localhost:26657")\n      --note string                    Note to add a description to the transaction (previously --memo)\n      --offline                        Offline mode (does not allow any online functionality)\n  -o, --output string                  Output format (text|json) (default "json")\n      --relative-packet-timeout uint   Relative packet timeout in nanoseconds from now. Default is 10 minutes. (default 600000000000)\n  -s, --sequence uint                  The sequence number of the signing account (offline mode only)\n      --sign-mode string               Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint            Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                     Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn\'t enable the TipDecorator\n  -y, --yes                            Skip tx broadcasting prompt confirmation\n')),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/fr/commands/next/okp4d_tx_interchain-accounts_controller"},"okp4d tx interchain-accounts controller"),"\t - IBC interchain accounts controller transaction subcommands")))}u.isMDXComponent=!0}}]);