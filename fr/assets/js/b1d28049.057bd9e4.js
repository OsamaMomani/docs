"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[14459],{3905:(t,e,a)=>{a.d(e,{Zo:()=>o,kt:()=>_});var i=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,i)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,i,n=function(t,e){if(null==t)return{};var a,i,n={},r=Object.keys(t);for(i=0;i<r.length;i++)a=r[i],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)a=r[i],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var m=i.createContext({}),s=function(t){var e=i.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},o=function(t){var e=s(t.components);return i.createElement(m.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var a=t.components,n=t.mdxType,r=t.originalType,m=t.parentName,o=p(t,["components","mdxType","originalType","parentName"]),d=s(a),_=n,k=d["".concat(m,".").concat(_)]||d[_]||u[_]||r;return a?i.createElement(k,l(l({ref:e},o),{},{components:a})):i.createElement(k,l({ref:e},o))}));function _(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var r=a.length,l=new Array(r);l[0]=d;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var s=2;s<r;s++)l[s]=a[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},70442:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var i=a(87462),n=(a(67294),a(3905));const r={},l="InstantiateMsg Schema",p={unversionedId:"okp4-cognitarium-instantiatemsg",id:"version-v2.1.0/okp4-cognitarium-instantiatemsg",title:"InstantiateMsg Schema",description:"Instantiate message",source:"@site/contracts_versioned_docs/version-v2.1.0/okp4-cognitarium-instantiatemsg.md",sourceDirName:".",slug:"/okp4-cognitarium-instantiatemsg",permalink:"/fr/contracts/okp4-cognitarium-instantiatemsg",draft:!1,tags:[],version:"v2.1.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits"},next:{title:"N-Quads Schema",permalink:"/fr/contracts/okp4-cognitarium-querymsg-definitions-dataformat-oneof-n-quads"}},m={},s=[{value:"instantiate Type",id:"instantiate-type",level:2},{value:"limits",id:"limits",level:2},{value:"limits Type",id:"limits-type",level:3},{value:"limits Default Value",id:"limits-default-value",level:3},{value:"Definitions group StoreLimitsInput",id:"definitions-group-storelimitsinput",level:2},{value:"max_byte_size",id:"max_byte_size",level:3},{value:"max_byte_size Type",id:"max_byte_size-type",level:4},{value:"max_byte_size Default Value",id:"max_byte_size-default-value",level:4},{value:"max_insert_data_byte_size",id:"max_insert_data_byte_size",level:3},{value:"max_insert_data_byte_size Type",id:"max_insert_data_byte_size-type",level:4},{value:"max_insert_data_byte_size Default Value",id:"max_insert_data_byte_size-default-value",level:4},{value:"max_insert_data_triple_count",id:"max_insert_data_triple_count",level:3},{value:"max_insert_data_triple_count Type",id:"max_insert_data_triple_count-type",level:4},{value:"max_insert_data_triple_count Default Value",id:"max_insert_data_triple_count-default-value",level:4},{value:"max_query_limit",id:"max_query_limit",level:3},{value:"max_query_limit Type",id:"max_query_limit-type",level:4},{value:"max_query_limit Constraints",id:"max_query_limit-constraints",level:4},{value:"max_query_limit Default Value",id:"max_query_limit-default-value",level:4},{value:"max_query_variable_count",id:"max_query_variable_count",level:3},{value:"max_query_variable_count Type",id:"max_query_variable_count-type",level:4},{value:"max_query_variable_count Constraints",id:"max_query_variable_count-constraints",level:4},{value:"max_query_variable_count Default Value",id:"max_query_variable_count-default-value",level:4},{value:"max_triple_byte_size",id:"max_triple_byte_size",level:3},{value:"max_triple_byte_size Type",id:"max_triple_byte_size-type",level:4},{value:"max_triple_byte_size Default Value",id:"max_triple_byte_size-default-value",level:4},{value:"max_triple_count",id:"max_triple_count",level:3},{value:"max_triple_count Type",id:"max_triple_count-type",level:4},{value:"max_triple_count Default Value",id:"max_triple_count-default-value",level:4},{value:"Definitions group Uint128",id:"definitions-group-uint128",level:2}],o={toc:s};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,i.Z)({},o,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"instantiatemsg-schema"},"InstantiateMsg Schema"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-txt"},"undefined#/instantiate\n")),(0,n.kt)("p",null,"Instantiate message"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Abstract"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Extensible"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Status"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Identifiable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Custom Properties"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Additional Properties"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Access Restrictions"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Defined In"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Can be instantiated"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Unknown status"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,n.kt)("td",{parentName:"tr",align:"left"},"none"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{target:"_blank",href:a(62804).Z,title:"open original schema"},"okp4-cognitarium.json*"))))),(0,n.kt)("h2",{id:"instantiate-type"},"instantiate Type"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"object")," (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg"},"InstantiateMsg"),")"),(0,n.kt)("h1",{id:"instantiate-properties"},"instantiate Properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#limits"},"limits")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits",title:"undefined#/instantiate/properties/limits"},"okp4-cognitarium"))))),(0,n.kt)("h2",{id:"limits"},"limits"),(0,n.kt)("p",null,"Limitations regarding store usage."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"limits")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits",title:"undefined#/instantiate/properties/limits"},"okp4-cognitarium")))),(0,n.kt)("h3",{id:"limits-type"},"limits Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-properties-limits-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h3",{id:"limits-default-value"},"limits Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "max_byte_size": "340282366920938463463374607431768211455",\n  "max_insert_data_byte_size": "340282366920938463463374607431768211455",\n  "max_insert_data_triple_count": "340282366920938463463374607431768211455",\n  "max_query_limit": 30,\n  "max_query_variable_count": 30,\n  "max_triple_byte_size": "340282366920938463463374607431768211455",\n  "max_triple_count": "340282366920938463463374607431768211455"\n}\n')),(0,n.kt)("h1",{id:"instantiatemsg-definitions"},"InstantiateMsg Definitions"),(0,n.kt)("h2",{id:"definitions-group-storelimitsinput"},"Definitions group StoreLimitsInput"),(0,n.kt)("p",null,"Reference this group by using"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{"$ref":"undefined#/instantiate/definitions/StoreLimitsInput"}\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_byte_size"},"max","_","byte","_","size")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_byte_size"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_byte_size"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_triple_count"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_query_limit"},"max","_","query","_","limit")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"integer")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_limit",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_limit"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_query_variable_count"},"max","_","query","_","variable","_","count")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"integer")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_variable_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_variable_count"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_triple_byte_size"},"max","_","triple","_","byte","_","size")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_byte_size"},"okp4-cognitarium"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#max_triple_count"},"max","_","triple","_","count")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,n.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_count"},"okp4-cognitarium"))))),(0,n.kt)("h3",{id:"max_byte_size"},"max","_","byte","_","size"),(0,n.kt)("p",null,"The maximum number of bytes the store can contains. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_byte_size")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_byte_size"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_byte_size-type"},"max","_","byte","_","size Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h4",{id:"max_byte_size-default-value"},"max","_","byte","_","size Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')),(0,n.kt)("h3",{id:"max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size"),(0,n.kt)("p",null,"The maximum number of bytes an insert data query can contains. Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_insert_data_byte_size")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_byte_size"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_insert_data_byte_size-type"},"max","_","insert","_","data","_","byte","_","size Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h4",{id:"max_insert_data_byte_size-default-value"},"max","_","insert","_","data","_","byte","_","size Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')),(0,n.kt)("h3",{id:"max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count"),(0,n.kt)("p",null,"The maximum number of triples an insert data query can contains (after parsing). Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_insert_data_triple_count")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_triple_count"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_insert_data_triple_count-type"},"max","_","insert","_","data","_","triple","_","count Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h4",{id:"max_insert_data_triple_count-default-value"},"max","_","insert","_","data","_","triple","_","count Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')),(0,n.kt)("h3",{id:"max_query_limit"},"max","_","query","_","limit"),(0,n.kt)("p",null,"The maximum limit of a query, i.e. the maximum number of triples returned by a select query. Default to 30 if not set."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_query_limit")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: ",(0,n.kt)("inlineCode",{parentName:"p"},"integer"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_limit",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_limit"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_query_limit-type"},"max","_","query","_","limit Type"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"integer")),(0,n.kt)("h4",{id:"max_query_limit-constraints"},"max","_","query","_","limit Constraints"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,n.kt)("inlineCode",{parentName:"p"},"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,n.kt)("inlineCode",{parentName:"p"},"uint32")),(0,n.kt)("h4",{id:"max_query_limit-default-value"},"max","_","query","_","limit Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},"30\n")),(0,n.kt)("h3",{id:"max_query_variable_count"},"max","_","query","_","variable","_","count"),(0,n.kt)("p",null,"The maximum number of variables a query can select. Default to 30 if not set."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_query_variable_count")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: ",(0,n.kt)("inlineCode",{parentName:"p"},"integer"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_variable_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_variable_count"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_query_variable_count-type"},"max","_","query","_","variable","_","count Type"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"integer")),(0,n.kt)("h4",{id:"max_query_variable_count-constraints"},"max","_","query","_","variable","_","count Constraints"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,n.kt)("inlineCode",{parentName:"p"},"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,n.kt)("inlineCode",{parentName:"p"},"uint32")),(0,n.kt)("h4",{id:"max_query_variable_count-default-value"},"max","_","query","_","variable","_","count Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},"30\n")),(0,n.kt)("h3",{id:"max_triple_byte_size"},"max","_","triple","_","byte","_","size"),(0,n.kt)("p",null,"The maximum number of bytes the store can contains for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals. Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_triple_byte_size")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_byte_size"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_triple_byte_size-type"},"max","_","triple","_","byte","_","size Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h4",{id:"max_triple_byte_size-default-value"},"max","_","triple","_","byte","_","size Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')),(0,n.kt)("h3",{id:"max_triple_count"},"max","_","triple","_","count"),(0,n.kt)("p",null,"The maximum number of triples the store can contains. Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"max_triple_count")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"is optional")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Type: merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count"},"Details"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"cannot be null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"defined in: ",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_count"},"okp4-cognitarium")))),(0,n.kt)("h4",{id:"max_triple_count-type"},"max","_","triple","_","count Type"),(0,n.kt)("p",null,"merged type (",(0,n.kt)("a",{parentName:"p",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count"},"Details"),")"),(0,n.kt)("p",null,"all of"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,n.kt)("h4",{id:"max_triple_count-default-value"},"max","_","triple","_","count Default Value"),(0,n.kt)("p",null,"The default value is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')),(0,n.kt)("h2",{id:"definitions-group-uint128"},"Definitions group Uint128"),(0,n.kt)("p",null,"Reference this group by using"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{"$ref":"undefined#/instantiate/definitions/Uint128"}\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Defined by")))))}u.isMDXComponent=!0},62804:(t,e,a)=>{a.d(e,{Z:()=>i});const i=a.p+"assets/files/okp4-cognitarium-34f8dee3f448cb3f845117fb3974c24b.json"}}]);