"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[57036],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>f});var i=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,a=function(t,e){if(null==t)return{};var n,i,a={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=i.createContext({}),p=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=p(t.components);return i.createElement(l.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},u=i.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(n),f=a,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||r;return n?i.createElement(d,o(o({ref:e},c),{},{components:n})):i.createElement(d,o({ref:e},c))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25044:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const r={},o="Untitled undefined type in okp4-cognitarium Schema",s={unversionedId:"okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",id:"version-v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",title:"Untitled undefined type in okp4-cognitarium Schema",description:"The maximum number of bytes the store can contains. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. Default to \\[Uint128::MAX] if not set, which can be considered as no limit.",source:"@site/contracts_versioned_docs/version-v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size.md",sourceDirName:".",slug:"/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",permalink:"/fr/contracts/v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",draft:!1,tags:[],version:"v2.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/fr/contracts/v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size-allof-0"},next:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/fr/contracts/v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size-allof-0"}},l={},p=[{value:"max_byte_size Type",id:"max_byte_size-type",level:2},{value:"max_byte_size Default Value",id:"max_byte_size-default-value",level:2}],c={toc:p};function m(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,i.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"untitled-undefined-type-in-okp4-cognitarium-schema"},"Untitled undefined type in okp4-cognitarium Schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_byte_size\n")),(0,a.kt)("p",null,"The maximum number of bytes the store can contains. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. Default to ","[","Uint128::MAX] if not set, which can be considered as no limit."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Abstract"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Extensible"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Status"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Identifiable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Custom Properties"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Additional Properties"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Access Restrictions"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined In"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Can be instantiated"),(0,a.kt)("td",{parentName:"tr",align:"left"},"No"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Unknown status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Unknown identifiability"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Allowed"),(0,a.kt)("td",{parentName:"tr",align:"left"},"none"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{target:"_blank",href:n(26730).Z,title:"open original schema"},"okp4-cognitarium.json*"))))),(0,a.kt)("h2",{id:"max_byte_size-type"},"max","_","byte","_","size Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/fr/contracts/v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/fr/contracts/v2.0.0/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h2",{id:"max_byte_size-default-value"},"max","_","byte","_","size Default Value"),(0,a.kt)("p",null,"The default value is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"340282366920938463463374607431768211455"\n')))}m.isMDXComponent=!0},26730:(t,e,n)=>{n.d(e,{Z:()=>i});const i=n.p+"assets/files/okp4-cognitarium-8b047f6626171599919daf0f24fc304f.json"}}]);