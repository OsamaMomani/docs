"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[27113],{3905:(e,o,r)=>{r.d(o,{Zo:()=>s,kt:()=>d});var t=r(67294);function n(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function p(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?p(Object(r),!0).forEach((function(o){n(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function i(e,o){if(null==e)return{};var r,t,n=function(e,o){if(null==e)return{};var r,t,n={},p=Object.keys(e);for(t=0;t<p.length;t++)r=p[t],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)r=p[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=t.createContext({}),u=function(e){var o=t.useContext(l),r=o;return e&&(r="function"==typeof e?e(o):a(a({},o),e)),r},s=function(e){var o=u(e.components);return t.createElement(l.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},y=t.forwardRef((function(e,o){var r=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),y=u(r),d=n,f=y["".concat(l,".").concat(d)]||y[d]||c[d]||p;return r?t.createElement(f,a(a({ref:o},s),{},{components:r})):t.createElement(f,a({ref:o},s))}));function d(e,o){var r=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var p=r.length,a=new Array(p);a[0]=y;var i={};for(var l in o)hasOwnProperty.call(o,l)&&(i[l]=o[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var u=2;u<p;u++)a[u]=r[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},72859:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>p,metadata:()=>i,toc:()=>u});var t=r(87462),n=(r(67294),r(3905));const p={},a=void 0,i={unversionedId:"okp4d_query_group_proposals-by-group-policy",id:"version-v5.0.0/okp4d_query_group_proposals-by-group-policy",title:"okp4d_query_group_proposals-by-group-policy",description:"okp4d query group proposals-by-group-policy",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_group_proposals-by-group-policy.md",sourceDirName:".",slug:"/okp4d_query_group_proposals-by-group-policy",permalink:"/fr/commands/okp4d_query_group_proposals-by-group-policy",draft:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_group_proposal",permalink:"/fr/commands/okp4d_query_group_proposal"},next:{title:"okp4d_query_group_tally-result",permalink:"/fr/commands/okp4d_query_group_tally-result"}},l={},u=[{value:"okp4d query group proposals-by-group-policy",id:"okp4d-query-group-proposals-by-group-policy",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],s={toc:u};function c(e){let{components:o,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},s,r,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"okp4d-query-group-proposals-by-group-policy"},"okp4d query group proposals-by-group-policy"),(0,n.kt)("p",null,"Query for proposals by account address of group policy with pagination flags"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"okp4d query group proposals-by-group-policy [group-policy-account] [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --count-total        count total number of records in proposals-by-group-policy to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposals-by-group-policy\n      --limit uint         pagination limit of proposals-by-group-policy to query for (default 100)\n      --node string        &lt;host&gt;:&lt;port&gt; to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of proposals-by-group-policy to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of proposals-by-group-policy to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of proposals-by-group-policy to query for\n      --reverse            results are sorted in descending order\n')),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --chain-id string   The network chain ID (default "okp4d")\n')),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/fr/commands/next/okp4d_query_group"},"okp4d query group"),"\t - Querying commands for the group module")))}c.isMDXComponent=!0}}]);