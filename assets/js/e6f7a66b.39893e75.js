"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[67704],{40763:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var d=n(85893),r=n(11151);const t={sidebar_position:4},a="bech32_address/2",i={id:"bech32_address_2",title:"bech32_address_2",description:"[//]: # (This file is auto-generated. Please do not modify it yourself.)",source:"@site/predicates/bech32_address_2.md",sourceDirName:".",slug:"/bech32_address_2",permalink:"/predicates/bech32_address_2",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"bank_spendable_balances_2",permalink:"/predicates/bank_spendable_balances_2"},next:{title:"block_height_1",permalink:"/predicates/block_height_1"}},c={},o=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.h1,{id:"bech32_address2",children:"bech32_address/2"}),"\n",(0,d.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.code,{children:"bech32_address/2"})," is a predicate that convert a ",(0,d.jsx)(s.a,{href:"https://docs.cosmos.network/main/build/spec/addresses/bech32#hrp-table",children:"bech32"})," encoded string into ",(0,d.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Base64",children:"base64"})," bytes and give the address prefix, or convert a prefix (HRP) and ",(0,d.jsx)(s.a,{href:"https://fr.wikipedia.org/wiki/Base64",children:"base64"})," encoded bytes to ",(0,d.jsx)(s.a,{href:"https://docs.cosmos.network/main/build/spec/addresses/bech32#hrp-table",children:"bech32"})," encoded string."]}),"\n",(0,d.jsx)(s.p,{children:"The signature is as follows:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-text",children:"bech32_address(-Address, +Bech32)\nbech32_address(+Address, -Bech32)\nbech32_address(+Address, +Bech32)\n"})}),"\n",(0,d.jsx)(s.p,{children:"where:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Address is a pair of the HRP (Human-Readable Part) which holds the address prefix and a list of numbers ranging from 0 to 255 that represent the base64 encoded bech32 address string."}),"\n",(0,d.jsx)(s.li,{children:"Bech32 is an Atom or string representing the bech32 encoded string address"}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-text",children:"# Convert the given bech32 address into base64 encoded byte by unify the prefix of given address (Hrp) and the\nbase64 encoded value (Address).\n- bech32_address(-(Hrp, Address), 'okp415wn30a9z4uc692s0kkx5fp5d4qfr3ac7sj9dqn').\n\n# Convert the given pair of HRP and base64 encoded address byte by unify the Bech32 string encoded value.\n- bech32_address(-('okp4', [163,167,23,244,162,175,49,162,170,15,181,141,68,134,141,168,18,56,247,30]), Bech32).\n"})})]})}function l(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>i,a:()=>a});var d=n(67294);const r={},t=d.createContext(r);function a(e){const s=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),d.createElement(t.Provider,{value:s},e.children)}}}]);