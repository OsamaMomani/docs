"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[69701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),k=l(n),d=a,c=k["".concat(o,".").concat(d)]||k[d]||u[d]||i;return n?r.createElement(c,p(p({ref:t},m),{},{components:n})):r.createElement(c,p({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,p[1]=s;for(var l=2;l<i;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},50077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={},p="StoreResponse Schema",s={unversionedId:"okp4-cognitarium-responses-storeresponse",id:"version-v2.0.0/okp4-cognitarium-responses-storeresponse",title:"StoreResponse Schema",description:"Contains information related to triple store.",source:"@site/contracts_versioned_docs/version-v2.0.0/okp4-cognitarium-responses-storeresponse.md",sourceDirName:".",slug:"/okp4-cognitarium-responses-storeresponse",permalink:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse",draft:!1,tags:[],version:"v2.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat"},next:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/contracts/v2.0.0/okp4-cognitarium-responses"}},o={},l=[{value:"store Type",id:"store-type",level:2},{value:"limits",id:"limits",level:2},{value:"limits Type",id:"limits-type",level:3},{value:"owner",id:"owner",level:2},{value:"owner Type",id:"owner-type",level:3},{value:"stat",id:"stat",level:2},{value:"stat Type",id:"stat-type",level:3},{value:"Definitions group StoreLimits",id:"definitions-group-storelimits",level:2},{value:"max_byte_size",id:"max_byte_size",level:3},{value:"max_byte_size Type",id:"max_byte_size-type",level:4},{value:"max_insert_data_byte_size",id:"max_insert_data_byte_size",level:3},{value:"max_insert_data_byte_size Type",id:"max_insert_data_byte_size-type",level:4},{value:"max_insert_data_triple_count",id:"max_insert_data_triple_count",level:3},{value:"max_insert_data_triple_count Type",id:"max_insert_data_triple_count-type",level:4},{value:"max_query_limit",id:"max_query_limit",level:3},{value:"max_query_limit Type",id:"max_query_limit-type",level:4},{value:"max_query_limit Constraints",id:"max_query_limit-constraints",level:4},{value:"max_query_variable_count",id:"max_query_variable_count",level:3},{value:"max_query_variable_count Type",id:"max_query_variable_count-type",level:4},{value:"max_query_variable_count Constraints",id:"max_query_variable_count-constraints",level:4},{value:"max_triple_byte_size",id:"max_triple_byte_size",level:3},{value:"max_triple_byte_size Type",id:"max_triple_byte_size-type",level:4},{value:"max_triple_count",id:"max_triple_count",level:3},{value:"max_triple_count Type",id:"max_triple_count-type",level:4},{value:"Definitions group StoreStat",id:"definitions-group-storestat",level:2},{value:"byte_size",id:"byte_size",level:3},{value:"byte_size Type",id:"byte_size-type",level:4},{value:"namespace_count",id:"namespace_count",level:3},{value:"namespace_count Type",id:"namespace_count-type",level:4},{value:"triple_count",id:"triple_count",level:3},{value:"triple_count Type",id:"triple_count-type",level:4},{value:"Definitions group Uint128",id:"definitions-group-uint128",level:2}],m={toc:l};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storeresponse-schema"},"StoreResponse Schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},"undefined#/responses/store\n")),(0,a.kt)("p",null,"Contains information related to triple store."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Abstract"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Extensible"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Status"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Identifiable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Custom Properties"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Additional Properties"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Access Restrictions"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined In"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Can be instantiated"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Unknown status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"No"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,a.kt)("td",{parentName:"tr",align:"left"},"none"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{target:"_blank",href:n(26730).Z,title:"open original schema"},"okp4-cognitarium.json*"))))),(0,a.kt)("h2",{id:"store-type"},"store Type"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"object")," (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse"},"StoreResponse"),")"),(0,a.kt)("h1",{id:"store-properties"},"store Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#limits"},"limits")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-limits",title:"undefined#/responses/store/properties/limits"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#owner"},"owner")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-owner",title:"undefined#/responses/store/properties/owner"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#stat"},"stat")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat",title:"undefined#/responses/store/properties/stat"},"okp4-cognitarium"))))),(0,a.kt)("h2",{id:"limits"},"limits"),(0,a.kt)("p",null,"The store limits."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"limits")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-limits"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-limits",title:"undefined#/responses/store/properties/limits"},"okp4-cognitarium")))),(0,a.kt)("h3",{id:"limits-type"},"limits Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-limits"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-limits-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h2",{id:"owner"},"owner"),(0,a.kt)("p",null,"The store owner."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"owner")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: ",(0,a.kt)("inlineCode",{parentName:"p"},"string"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-owner",title:"undefined#/responses/store/properties/owner"},"okp4-cognitarium")))),(0,a.kt)("h3",{id:"owner-type"},"owner Type"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h2",{id:"stat"},"stat"),(0,a.kt)("p",null,"The store current usage."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stat")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat",title:"undefined#/responses/store/properties/stat"},"okp4-cognitarium")))),(0,a.kt)("h3",{id:"stat-type"},"stat Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-properties-stat-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h1",{id:"storeresponse-definitions"},"StoreResponse Definitions"),(0,a.kt)("h2",{id:"definitions-group-storelimits"},"Definitions group StoreLimits"),(0,a.kt)("p",null,"Reference this group by using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{"$ref":"undefined#/responses/store/definitions/StoreLimits"}\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_byte_size"},"max","_","byte","_","size")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_byte_size"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_insert_data_byte_size"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_triple_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_insert_data_triple_count"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_query_limit"},"max","_","query","_","limit")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"integer")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_query_limit",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_query_limit"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_query_variable_count"},"max","_","query","_","variable","_","count")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"integer")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_query_variable_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_query_variable_count"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_triple_byte_size"},"max","_","triple","_","byte","_","size")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_triple_byte_size"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#max_triple_count"},"max","_","triple","_","count")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_triple_count"},"okp4-cognitarium"))))),(0,a.kt)("h3",{id:"max_byte_size"},"max","_","byte","_","size"),(0,a.kt)("p",null,"The maximum number of bytes the store can contains. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_byte_size")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_byte_size"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_byte_size"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_byte_size-type"},"max","_","byte","_","size Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_byte_size"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size"),(0,a.kt)("p",null,"The maximum number of bytes an insert data query can contains."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_insert_data_byte_size")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_byte_size"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_insert_data_byte_size"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_insert_data_byte_size-type"},"max","_","insert","_","data","_","byte","_","size Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_byte_size"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count"),(0,a.kt)("p",null,"The maximum number of triples an insert data query can contains (after parsing)."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_insert_data_triple_count")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_triple_count"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_triple_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_insert_data_triple_count"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_insert_data_triple_count-type"},"max","_","insert","_","data","_","triple","_","count Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_triple_count"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_insert_data_triple_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"max_query_limit"},"max","_","query","_","limit"),(0,a.kt)("p",null,"The maximum limit of a query, i.e. the maximum number of triples returned by a select query."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_query_limit")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: ",(0,a.kt)("inlineCode",{parentName:"p"},"integer"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_query_limit",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_query_limit"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_query_limit-type"},"max","_","query","_","limit Type"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"integer")),(0,a.kt)("h4",{id:"max_query_limit-constraints"},"max","_","query","_","limit Constraints"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,a.kt)("inlineCode",{parentName:"p"},"0")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,a.kt)("inlineCode",{parentName:"p"},"uint32")),(0,a.kt)("h3",{id:"max_query_variable_count"},"max","_","query","_","variable","_","count"),(0,a.kt)("p",null,"The maximum number of variables a query can select."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_query_variable_count")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: ",(0,a.kt)("inlineCode",{parentName:"p"},"integer"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_query_variable_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_query_variable_count"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_query_variable_count-type"},"max","_","query","_","variable","_","count Type"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"integer")),(0,a.kt)("h4",{id:"max_query_variable_count-constraints"},"max","_","query","_","variable","_","count Constraints"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,a.kt)("inlineCode",{parentName:"p"},"0")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,a.kt)("inlineCode",{parentName:"p"},"uint32")),(0,a.kt)("h3",{id:"max_triple_byte_size"},"max","_","triple","_","byte","_","size"),(0,a.kt)("p",null,"The maximum number of bytes the store can contains for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_triple_byte_size")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_byte_size"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_byte_size",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_triple_byte_size"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_triple_byte_size-type"},"max","_","triple","_","byte","_","size Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_byte_size"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"max_triple_count"},"max","_","triple","_","count"),(0,a.kt)("p",null,"The maximum number of triples the store can contains."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_triple_count")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_count"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_count",title:"undefined#/responses/store/definitions/StoreLimits/properties/max_triple_count"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"max_triple_count-type"},"max","_","triple","_","count Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_count"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storelimits-properties-max_triple_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h2",{id:"definitions-group-storestat"},"Definitions group StoreStat"),(0,a.kt)("p",null,"Reference this group by using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{"$ref":"undefined#/responses/store/definitions/StoreStat"}\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#byte_size"},"byte","_","size")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-byte_size",title:"undefined#/responses/store/definitions/StoreStat/properties/byte_size"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#namespace_count"},"namespace","_","count")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-namespace_count",title:"undefined#/responses/store/definitions/StoreStat/properties/namespace_count"},"okp4-cognitarium"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"#triple_count"},"triple","_","count")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-triple_count",title:"undefined#/responses/store/definitions/StoreStat/properties/triple_count"},"okp4-cognitarium"))))),(0,a.kt)("h3",{id:"byte_size"},"byte","_","size"),(0,a.kt)("p",null,"The total triple size in the store, in bytes."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"byte_size")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-byte_size"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-byte_size",title:"undefined#/responses/store/definitions/StoreStat/properties/byte_size"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"byte_size-type"},"byte","_","size Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-byte_size"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-byte_size-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"namespace_count"},"namespace","_","count"),(0,a.kt)("p",null,"The total number of IRI namespace present in the store."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"namespace_count")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-namespace_count"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-namespace_count",title:"undefined#/responses/store/definitions/StoreStat/properties/namespace_count"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"namespace_count-type"},"namespace","_","count Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-namespace_count"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-namespace_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h3",{id:"triple_count"},"triple","_","count"),(0,a.kt)("p",null,"The total number of triple present in the store."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"triple_count")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"is required")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Type: merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-triple_count"},"Details"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cannot be null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"defined in: ",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-triple_count",title:"undefined#/responses/store/definitions/StoreStat/properties/triple_count"},"okp4-cognitarium")))),(0,a.kt)("h4",{id:"triple_count-type"},"triple","_","count Type"),(0,a.kt)("p",null,"merged type (",(0,a.kt)("a",{parentName:"p",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-triple_count"},"Details"),")"),(0,a.kt)("p",null,"all of"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/contracts/v2.0.0/okp4-cognitarium-responses-storeresponse-definitions-storestat-properties-triple_count-allof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,a.kt)("h2",{id:"definitions-group-uint128"},"Definitions group Uint128"),(0,a.kt)("p",null,"Reference this group by using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{"$ref":"undefined#/responses/store/definitions/Uint128"}\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Defined by")))))}u.isMDXComponent=!0},26730:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/okp4-cognitarium-8b047f6626171599919daf0f24fc304f.json"}}]);