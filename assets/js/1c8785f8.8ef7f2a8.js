"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[95209],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=d(n),g=a,u=f["".concat(l,".").concat(g)]||f[g]||p[g]||o;return n?r.createElement(u,i(i({ref:t},c),{},{components:n})):r.createElement(u,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},11641:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const o={},i=void 0,s={unversionedId:"okp4d_tx_feegrant_grant",id:"version-v5.0.0/okp4d_tx_feegrant_grant",title:"okp4d_tx_feegrant_grant",description:"okp4d tx feegrant grant",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_tx_feegrant_grant.md",sourceDirName:".",slug:"/okp4d_tx_feegrant_grant",permalink:"/commands/okp4d_tx_feegrant_grant",draft:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_tx_feegrant",permalink:"/commands/okp4d_tx_feegrant"},next:{title:"okp4d_tx_feegrant_revoke",permalink:"/commands/okp4d_tx_feegrant_revoke"}},l={},d=[{value:"okp4d tx feegrant grant",id:"okp4d-tx-feegrant-grant",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"okp4d-tx-feegrant-grant"},"okp4d tx feegrant grant"),(0,a.kt)("p",null,"Grant Fee allowance to an address"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Grant authorization to pay fees from your address. Note, the'--from' flag is\nignored as it is implied from ","[granter]","."),(0,a.kt)("p",null,'Examples:\nokp4d tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --expiration 2022-01-30T15:04:05Z or\nokp4d tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --period 3600 --period-limit 10stake --expiration 2022-01-30T15:04:05Z or\nokp4d tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --expiration 2022-01-30T15:04:05Z\n--allowed-messages "/cosmos.gov.v1beta1.MsgSubmitProposal,/cosmos.gov.v1beta1.MsgVote"'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"okp4d tx feegrant grant [granter_key_or_address] [grantee] [flags]\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --allowed-messages strings   Set of allowed messages for fee allowance\n      --aux                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async) (default "sync")\n      --chain-id string            The network chain ID (default "okp4d")\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don\'t broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration string          The RFC 3339 timestamp after which the grant expires for the user\n      --fee-granter string         Fee granter grants fees for the transaction\n      --fee-payer string           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn\'t always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                       help for grant\n      --keyring-backend string     Select keyring\'s backend (os|file|kwallet|pass|test|memory) (default "test")\n      --keyring-dir string         The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --ledger                     Use a connected Ledger device\n      --node string                &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default "tcp://localhost:26657")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality)\n  -o, --output string              Output format (text|json) (default "json")\n      --period int                 period specifies the time duration(in seconds) in which period_limit coins can be spent before that allowance is reset (ex: 3600)\n      --period-limit string        period limit specifies the maximum number of coins that can be spent in the period\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --spend-limit string         Spend limit specifies the max limit can be used, if not mentioned there is no limit\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn\'t enable the TipDecorator\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n')),(0,a.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/commands/next/okp4d_tx_feegrant"},"okp4d tx feegrant"),"\t - Feegrant transactions subcommands")))}p.isMDXComponent=!0}}]);