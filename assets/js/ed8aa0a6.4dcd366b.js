"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[18942],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return g}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=r.createContext({}),u=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(l.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,l=n.parentName,p=a(n,["components","mdxType","originalType","parentName"]),c=u(t),g=i,d=c["".concat(l,".").concat(g)]||c[g]||f[g]||o;return t?r.createElement(d,s(s({ref:e},p),{},{components:t})):r.createElement(d,s({ref:e},p))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,s=new Array(o);s[0]=c;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a.mdxType="string"==typeof n?n:i,s[1]=a;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},95540:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return f}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],a={},l=void 0,u={unversionedId:"okp4d_query_slashing_signing-infos",id:"version-v5.0.0/okp4d_query_slashing_signing-infos",title:"okp4d_query_slashing_signing-infos",description:"okp4d query slashing signing-infos",source:"@site/commands_versioned_docs/version-v5.0.0/okp4d_query_slashing_signing-infos.md",sourceDirName:".",slug:"/okp4d_query_slashing_signing-infos",permalink:"/commands/okp4d_query_slashing_signing-infos",draft:!1,tags:[],version:"v5.0.0",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"okp4d_query_slashing_signing-info",permalink:"/commands/okp4d_query_slashing_signing-info"},next:{title:"okp4d_query_staking",permalink:"/commands/okp4d_query_staking"}},p={},f=[{value:"okp4d query slashing signing-infos",id:"okp4d-query-slashing-signing-infos",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],c={toc:f};function g(n){var e=n.components,t=(0,i.Z)(n,s);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"okp4d-query-slashing-signing-infos"},"okp4d query slashing signing-infos"),(0,o.kt)("p",null,"Query signing information of all validators"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"signing infos of validators:"),(0,o.kt)("p",null,"$ okp4d query slashing signing-infos"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"okp4d query slashing signing-infos [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --count-total        count total number of records in signing infos to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for signing-infos\n      --limit uint         pagination limit of signing infos to query for (default 100)\n      --node string        &lt;host&gt;:&lt;port&gt; to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint        pagination offset of signing infos to query for\n  -o, --output string      Output format (text|json) (default "text")\n      --page uint          pagination page of signing infos to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of signing infos to query for\n      --reverse            results are sorted in descending order\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --chain-id string   The network chain ID (default "okp4d")\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/commands/next/okp4d_query_slashing"},"okp4d query slashing"),"\t - Querying commands for the slashing module")))}g.isMDXComponent=!0}}]);